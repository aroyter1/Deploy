worker_processes auto;
events { worker_connections 1024; }
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Enhanced logging for debugging
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'Request body: "$request_body" '
                       'Upstream: "$upstream_addr" '
                       'Upstream status: "$upstream_status" '
                       'Request URI: "$request_uri" '
                       'Proxy URI: "$proxy_host$uri"';
    
    error_log /dev/stdout debug;
    access_log /dev/stdout detailed;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;

    # Backend servers configuration with improved load balancing
    upstream backend_servers {
        least_conn;
        server backend1.local:3000;
        server backend2.local:3000;
        keepalive 32;
    }

    map $request_method $cors_method {
        OPTIONS 1;
        default 0;
    }

    server {
        listen 80 default_server;
        server_name api.frontend.local;

        # Root path - API status
        location = / {
            return 200 '{"status":"ok","service":"ShortLink API Gateway","version":"1.0.0"}';
        }

        # Health check endpoint
        location = /health {
            return 200 '{"status":"healthy"}';
        }

        # API endpoints
        location /api/ {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Additional proxy settings for better stability
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;

            # Debug headers
            add_header X-Debug-Original-URI $uri;
            add_header X-Debug-Request-URI $request_uri;
            add_header X-Debug-Proxy-Pass $upstream_addr;
        }

        # Short links redirect
        location ~ ^/([a-zA-Z0-9]+)$ {
            proxy_pass http://backend_servers/$1;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Additional proxy settings for better stability
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }

        # Handle all other paths
        location / {
            return 404 '{"error":"Not Found","message":"The requested resource does not exist"}';
        }
    }
} 