pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Basic settings
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    error_log /dev/stdout debug;
    access_log /dev/stdout combined;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    types_hash_bucket_size 64;

    # Backend servers configuration
    upstream backend_servers {
        server backend1.local:3000;
        server backend2.local:3000;
        least_conn; # Use least connections algorithm for load balancing
    }

    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml+rss text/javascript;

    # JavaScript and TypeScript MIME types
    types {
        application/javascript    js mjs;
        application/typescript    ts;
    }

    # API Gateway server
    server {
        listen 80;
        listen 443 ssl;
        server_name api.frontend.local;

        # SSL configuration
        ssl_certificate /etc/nginx/certs/api.frontend.local.crt;
        ssl_certificate_key /etc/nginx/certs/api.frontend.local.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # CORS configuration
        add_header 'Access-Control-Allow-Origin' 'https://frontend.local' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        location / {
            proxy_pass http://backend_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Handle CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'https://frontend.local' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }

    # Frontend server
    server {
        listen 80;
        server_name frontend.local;

        # API proxy
        location /api/ {
            proxy_pass http://api.frontend.local:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Static files and SPA fallback
        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
        }

        # Handle JavaScript and TypeScript files
        location ~ \.(js|mjs)$ {
            add_header Content-Type application/javascript always;
            add_header Cache-Control "public, max-age=31536000, immutable" always;
            try_files $uri =404;
        }

        location ~ \.ts$ {
            add_header Content-Type application/typescript always;
            add_header Cache-Control "public, max-age=31536000, immutable" always;
            try_files $uri =404;
        }

        # Handle Vite assets
        location /assets/ {
            add_header Cache-Control "public, max-age=31536000, immutable";
            try_files $uri =404;
        }

        # Handle source maps
        location ~ \.map$ {
            add_header Content-Type application/json always;
            add_header Cache-Control "public, max-age=31536000, immutable" always;
            try_files $uri =404;
        }

        # Deny access to sensitive files
        location ~ /\. {
            deny all;
        }

        location @notfound {
            add_header Content-Type text/html;
            try_files /index.html =404;
        }
    }
}